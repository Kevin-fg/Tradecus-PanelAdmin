{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tour Agency\\\\frontend\\\\src\\\\components\\\\DNI\\\\DniField.jsx\";\n// DniField.jsx\nimport React from 'react';\nimport { FormGroup } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DniField = _ref => {\n  let {\n    index,\n    dni,\n    setDni,\n    userData,\n    setUserData\n  } = _ref;\n  const fetchDniData = async (dni, index) => {\n    try {\n      const response = await fetch(`http://localhost:8000/getDniData/${dni}`);\n      const data = await response.json();\n      // Aquí 'data' es la respuesta de tu API de Reniec\n\n      // Ahora, actualiza el estado con los nuevos datos\n      setUserData(prev => {\n        const newUserData = [...prev];\n        newUserData[index] = data;\n        return newUserData;\n      });\n    } catch (error) {\n      console.error(\"Error al obtener los datos del DNI: \", error);\n      alert(\"Error al obtener los datos del DNI\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"DNI\",\n      value: dni || '',\n      onChange: e => {\n        let tempDni = [...dni];\n        tempDni[index] = e.target.value;\n        setDni(tempDni);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchDniData,\n      children: \"Validar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), userData && userData.nombres && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nombres: \", userData.nombres]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 46\n    }, this), userData && userData.apellidoPaterno && userData.apellidoMaterno && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Apellidos: \", userData.apellidoPaterno, \" \", userData.apellidoMaterno]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = DniField;\nexport default DniField;\nvar _c;\n$RefreshReg$(_c, \"DniField\");","map":{"version":3,"names":["React","FormGroup","DniField","index","dni","setDni","userData","setUserData","fetchDniData","response","fetch","data","json","prev","newUserData","error","console","alert","e","tempDni","target","value","nombres","apellidoPaterno","apellidoMaterno"],"sources":["E:/Tour Agency/frontend/src/components/DNI/DniField.jsx"],"sourcesContent":["// DniField.jsx\r\nimport React from 'react';\r\nimport { FormGroup, } from \"reactstrap\";\r\n\r\nconst DniField = ({ index, dni, setDni, userData, setUserData }) => {\r\n    const fetchDniData = async (dni, index) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/getDniData/${dni}`);\r\n            const data = await response.json();\r\n            // Aquí 'data' es la respuesta de tu API de Reniec\r\n    \r\n            // Ahora, actualiza el estado con los nuevos datos\r\n            setUserData(prev => {\r\n                const newUserData = [...prev];\r\n                newUserData[index] = data;\r\n                return newUserData;\r\n            });\r\n    \r\n        } catch (error) {\r\n            console.error(\"Error al obtener los datos del DNI: \", error);\r\n            alert(\"Error al obtener los datos del DNI\");\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <FormGroup>\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"DNI\"\r\n                value={dni || ''}\r\n                onChange={(e) => {\r\n                    let tempDni = [...dni];\r\n                    tempDni[index] = e.target.value;\r\n                    setDni(tempDni);\r\n                }}\r\n            />\r\n            <button onClick={fetchDniData}>\r\n                Validar\r\n            </button>\r\n            {userData && userData.nombres && <p>Nombres: {userData.nombres}</p>}\r\n            {userData && userData.apellidoPaterno && userData.apellidoMaterno &&\r\n                <p>Apellidos: {userData.apellidoPaterno} {userData.apellidoMaterno}</p>}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport default DniField;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAS,YAAY;AAAC;AAExC,MAAMC,QAAQ,GAAG,QAAmD;EAAA,IAAlD;IAAEC,KAAK;IAAEC,GAAG;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC;EAC3D,MAAMC,YAAY,GAAG,OAAOJ,GAAG,EAAED,KAAK,KAAK;IACvC,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCN,GAAI,EAAC,CAAC;MACvE,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC;;MAEA;MACAL,WAAW,CAACM,IAAI,IAAI;QAChB,MAAMC,WAAW,GAAG,CAAC,GAAGD,IAAI,CAAC;QAC7BC,WAAW,CAACX,KAAK,CAAC,GAAGQ,IAAI;QACzB,OAAOG,WAAW;MACtB,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DE,KAAK,CAAC,oCAAoC,CAAC;IAC/C;EACJ,CAAC;EAGD,oBACI,QAAC,SAAS;IAAA,wBACN;MACI,IAAI,EAAC,QAAQ;MACb,WAAW,EAAC,KAAK;MACjB,KAAK,EAAEb,GAAG,IAAI,EAAG;MACjB,QAAQ,EAAGc,CAAC,IAAK;QACb,IAAIC,OAAO,GAAG,CAAC,GAAGf,GAAG,CAAC;QACtBe,OAAO,CAAChB,KAAK,CAAC,GAAGe,CAAC,CAACE,MAAM,CAACC,KAAK;QAC/BhB,MAAM,CAACc,OAAO,CAAC;MACnB;IAAE;MAAA;MAAA;MAAA;IAAA,QACJ,eACF;MAAQ,OAAO,EAAEX,YAAa;MAAA,UAAC;IAE/B;MAAA;MAAA;MAAA;IAAA,QAAS,EACRF,QAAQ,IAAIA,QAAQ,CAACgB,OAAO,iBAAI;MAAA,WAAG,WAAS,EAAChB,QAAQ,CAACgB,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,EAClEhB,QAAQ,IAAIA,QAAQ,CAACiB,eAAe,IAAIjB,QAAQ,CAACkB,eAAe,iBAC7D;MAAA,WAAG,aAAW,EAAClB,QAAQ,CAACiB,eAAe,EAAC,GAAC,EAACjB,QAAQ,CAACkB,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACnE;AAEpB,CAAC;AAAC,KAzCItB,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}