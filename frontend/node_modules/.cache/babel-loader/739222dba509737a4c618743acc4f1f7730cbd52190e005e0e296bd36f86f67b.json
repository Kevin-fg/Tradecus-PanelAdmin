{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tour Agency\\\\frontend\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {\n    token\n  } = useParams(); // Obtén el token de la URL\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      // Las contraseñas no coinciden, muestra un error o realiza alguna acción\n      console.log('Las contraseñas no coinciden');\n      return;\n    }\n    try {\n      const response = await fetch('/api/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          token\n        }) // Pasa el token junto con la contraseña\n      });\n\n      if (!response.ok) {\n        throw new Error('Error al restablecer la contraseña');\n      }\n      const data = await response.json();\n\n      // La contraseña se restableció correctamente\n      // Puedes redirigir al usuario a la página de inicio de sesión aquí, si quieres\n    } catch (error) {\n      // Aquí es donde manejas los errores\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nueva contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Confirmar contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Restablecer contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"uuNK10ejdTu8DoBb9lBihdryMw0=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","token","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","target","value"],"sources":["E:/Tour Agency/frontend/src/pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const { token } = useParams();  // Obtén el token de la URL\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            // Las contraseñas no coinciden, muestra un error o realiza alguna acción\r\n            console.log('Las contraseñas no coinciden');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('/api/reset-password', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ password, token })  // Pasa el token junto con la contraseña\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error al restablecer la contraseña');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            // La contraseña se restableció correctamente\r\n            // Puedes redirigir al usuario a la página de inicio de sesión aquí, si quieres\r\n        } catch (error) {\r\n            // Aquí es donde manejas los errores\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>\r\n                Nueva contraseña:\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n            </label>\r\n            <label>\r\n                Confirmar contraseña:\r\n                <input\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                    onChange={e => setConfirmPassword(e.target.value)}\r\n                />\r\n            </label>\r\n            <button type=\"submit\">Restablecer contraseña</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM;IAAEO;EAAM,CAAC,GAAGN,SAAS,EAAE,CAAC,CAAE;;EAEhC,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIP,QAAQ,KAAKE,eAAe,EAAE;MAC9B;MACAM,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;IACJ;IAEA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;QAChDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB,QAAQ;UAAEI;QAAM,CAAC,CAAC,CAAE;MAC/C,CAAC,CAAC;;MAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;MACzD;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,EAAE;;MAElC;MACA;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ;MACAb,OAAO,CAACa,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACI;IAAM,QAAQ,EAAEhB,YAAa;IAAA,wBACzB;MAAA,WAAO,sBAEH;QACI,IAAI,EAAC,UAAU;QACf,KAAK,EAAEL,QAAS;QAChB,QAAQ,EAAEM,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACgB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACR;MAAA,WAAO,0BAEH;QACI,IAAI,EAAC,UAAU;QACf,KAAK,EAAErB,eAAgB;QACvB,QAAQ,EAAEI,CAAC,IAAIH,kBAAkB,CAACG,CAAC,CAACgB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACpD;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACR;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEf,CAAC;AAAC,GA1DIxB,aAAa;EAAA,QAGGD,SAAS;AAAA;AAAA,KAHzBC,aAAa;AA4DnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}