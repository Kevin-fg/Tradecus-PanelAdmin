{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tour Agency\\\\frontend\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport '../styles/resetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {\n    token\n  } = useParams();\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Las contraseñas no coinciden');\n      return;\n    }\n    try {\n      const response = await fetch('/api/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password,\n          token\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al restablecer la contraseña');\n      }\n      const data = await response.json();\n\n      // La contraseña se restableció correctamente\n      // Puedes redirigir al usuario a la página de inicio de sesión aquí, si quieres\n    } catch (error) {\n      // Aquí es donde manejas los errores\n      console.error(error);\n    }\n  };\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const toggleShowConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"reset-password__form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nueva contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"password-toggle\",\n          onClick: toggleShowPassword,\n          children: showPassword ? /*#__PURE__*/_jsxDEV(FaEyeSlash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Confirmar contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showConfirmPassword ? 'text' : 'password',\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"password-toggle\",\n          onClick: toggleShowConfirmPassword,\n          children: showConfirmPassword ? /*#__PURE__*/_jsxDEV(FaEyeSlash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 48\n          }, this) : /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Restablecer contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"+9WypSYuuUVD9eu6zBsdxYo+XNk=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","FaEye","FaEyeSlash","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","token","error","setError","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","toggleShowPassword","toggleShowConfirmPassword","target","value"],"sources":["E:/Tour Agency/frontend/src/pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport '../styles/resetPassword.css';\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const { token } = useParams();\r\n    const [error, setError] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            setError('Las contraseñas no coinciden');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('/api/reset-password', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ password, token })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error al restablecer la contraseña');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            // La contraseña se restableció correctamente\r\n            // Puedes redirigir al usuario a la página de inicio de sesión aquí, si quieres\r\n        } catch (error) {\r\n            // Aquí es donde manejas los errores\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const toggleShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const toggleShowConfirmPassword = () => {\r\n        setShowConfirmPassword(!showConfirmPassword);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"reset-password__form\">\r\n            <label>\r\n                Nueva contraseña:\r\n                <div className=\"password-input\">\r\n                    <input\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    <span className=\"password-toggle\" onClick={toggleShowPassword}>\r\n                        {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n                    </span>\r\n                </div>\r\n            </label>\r\n            <label>\r\n                Confirmar contraseña:\r\n                <div className=\"password-input\">\r\n                    <input\r\n                        type={showConfirmPassword ? 'text' : 'password'}\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    <span className=\"password-toggle\" onClick={toggleShowConfirmPassword}>\r\n                        {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n                    </span>\r\n                </div>\r\n            </label>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            <button type=\"submit\">Restablecer contraseña</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}